{"version":3,"sources":["App.tsx","page/HomePage.tsx","page/ErrorPage.tsx","date/tabs.tsx","page/TabsPage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","cn","App","className","to","HomePage","ErrorPage","tabs","id","title","content","TabsPage","tabId","useParams","getTabById","find","tab","map","Root","path","element","index","ReactDOM","render","document","getElementById"],"mappings":"gPAMMA,EAAe,SAAC,GAAD,IACjBC,EADiB,EACjBA,SADiB,OAEhBC,IAAG,cAAe,CACrB,YAAaD,KAGFE,EAAM,kBACjB,qCACE,qBACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEC,GAAG,IACHD,UAAWJ,EAFb,kBAMA,cAAC,IAAD,CACEK,GAAG,QACHD,UAAWJ,EAFb,yBAUN,qBAAKI,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,YCtCKE,EAAW,kBACtB,oBAAIF,UAAU,QAAd,wBCDWG,EAAY,kBACvB,oBAAIH,UAAU,QAAd,6BCDWI,EAAO,CAClB,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBCC7BC,EAAW,WACtB,IAAQC,EAAUC,cAAVD,MACFE,EAAaP,EAAKQ,MAAK,SAACC,GAAD,OAASA,EAAIR,KAAOI,KAEjD,OACE,qCACE,oBAAIT,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BACGI,EAAKU,KAAI,gBAAGT,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACR,oBAEE,UAAQ,MACRN,UAAWF,IAAG,CAAE,YAAaW,IAAUJ,IAHzC,SAKE,cAAC,IAAD,CAAMJ,GAAE,aAAQI,GAAhB,SAAuBC,KAJlBD,UAUb,qBAAKL,UAAU,QAAQ,UAAQ,aAA/B,SACGW,EAAaA,EAAWJ,QAAU,4BChB9BQ,EAAO,kBAClB,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUhB,GAAG,SACzC,eAAC,IAAD,CAAOe,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,SAEhC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,cClBjCE,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d2ecc8e2.chunk.js","sourcesContent":["import { Outlet, NavLink } from 'react-router-dom';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nconst getLinkClass = (\n  { isActive }: { isActive: boolean },\n) => cn('navbar-item', {\n  'is-active': isActive,\n});\n\nexport const App = () => (\n  <>\n    <nav\n      className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n      data-cy=\"Nav\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getLinkClass}\n          >\n            Home\n          </NavLink>\n          <NavLink\n            to=\"/tabs\"\n            className={getLinkClass}\n          >\n            Tabs\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </div>\n  </>\n);\n","export const HomePage = () => (\n  <h1 className=\"title\">Home page</h1>\n);\n","export const ErrorPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","export const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n","import cn from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { tabs } from '../date/tabs';\n\nexport const TabsPage = () => {\n  const { tabId } = useParams();\n  const getTabById = tabs.find((tab) => tab.id === tabId);\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(({ id, title }) => (\n            <li\n              key={id}\n              data-cy=\"Tab\"\n              className={cn({ 'is-active': tabId === id })}\n            >\n              <Link to={`../${id}`}>{title}</Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {getTabById ? getTabById.content : 'Please select a tab'}\n      </div>\n    </>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './page/HomePage';\nimport { ErrorPage } from './page/ErrorPage';\nimport { TabsPage } from './page/TabsPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"..\" />} />\n        <Route path=\"tabs\">\n          <Route index element={<TabsPage />} />\n          <Route path=\":tabId\" element={<TabsPage />} />\n        </Route>\n        <Route path=\"*\" element={<ErrorPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import ReactDOM from 'react-dom';\nimport { Root } from './Root';\n\nReactDOM.render(\n  <Root />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}